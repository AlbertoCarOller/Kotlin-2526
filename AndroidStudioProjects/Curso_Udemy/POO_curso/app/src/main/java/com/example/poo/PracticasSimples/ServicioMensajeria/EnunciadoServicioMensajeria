El Ejercicio: El Gestor de Entregas de un Servicio de Mensajer√≠a üì¶

Imagina que est√°s construyendo un sistema para un servicio de mensajer√≠a. Tienes que gestionar
diferentes tipos de paquetes que se env√≠an por distintos medios. Cada paquete tiene un
peso y un m√©todo de env√≠o que afecta su costo.

Paso 1: La Clase Base Paquete
Crea una clase open llamada Paquete.
Debe tener las siguientes propiedades: id (String) y pesoEnGramos (Double).
A√±ade un m√©todo open llamado calcularCostoEnvio() que devuelva un Double.
La implementaci√≥n por defecto debe ser 0.0.

Paso 2: Las Clases que Heredan
Crea una clase llamada Documento que herede de Paquete.
Dale una propiedad adicional llamada esConfidencial (Boolean).
Sobrescribe el m√©todo calcularCostoEnvio(). El costo para un documento es 5.0.
Si esConfidencial es true, a√±ade un recargo de 10.0.
Crea una clase llamada Caja que herede de Paquete.
Dale una propiedad adicional llamada volumenEnCmCubicos (Double).
Sobrescribe el m√©todo calcularCostoEnvio().
El costo para una caja es 10.0 m√°s 0.02 por cada gramo de peso.

Paso 3: El GestorEnvios (el Singleton)
Crea un objeto singleton llamado GestorEnvios.
Dentro de este objeto, crea una lista mutable
(MutableList) que pueda almacenar objetos de tipo Paquete.
Crea un m√©todo a√±adirEnvio(paquete: Paquete) que a√±ada un paquete a la lista.
Crea un m√©todo procesarTodosLosEnvios() que recorra la lista y:
Imprima los detalles de cada paquete (ID y peso).
Imprima el costo de env√≠o de cada paquete llamando a su m√©todo calcularCostoEnvio().
Crea un m√©todo calcularCostoTotal() que sume los costos de env√≠o de todos los paquetes
y devuelva el total.

Paso 4: La Ejecuci√≥n en main
En la funci√≥n main, crea una instancia del GestorEnvios.
Crea varias instancias de Documento y Caja con diferentes valores.
A√±ade todos los paquetes al gestor.
Llama al m√©todo procesarTodosLosEnvios() para ver los detalles y costos de cada uno.
Finalmente, llama a calcularCostoTotal() y muestra el costo total de todos los env√≠os.