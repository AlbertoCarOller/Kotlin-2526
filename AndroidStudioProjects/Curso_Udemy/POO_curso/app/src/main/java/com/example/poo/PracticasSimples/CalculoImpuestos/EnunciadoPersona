El ejercicio: El sistema de c√°lculo de impuestos üí∞
Imagina que est√°s construyendo un sistema de c√°lculo de impuestos para diferentes tipos
de personas. Vas a usar una interfaz para definir la obligaci√≥n de pagar impuestos y
diferentes clases para los tipos de personas.

Paso 1: La Interfaz Contribuyente
Crea una interfaz llamada Contribuyente.
Esta interfaz debe tener un m√©todo calcularImpuesto() que devuelva un Double.

Paso 2: La Clase Base Persona
Crea una clase open llamada Persona.
Debe tener las siguientes propiedades: nombre (String) y ingresoAnual (Double).

Paso 3: La Clase Empleado que hereda e implementa
Crea una clase llamada Empleado que herede de Persona e implemente la interfaz Contribuyente.
A√±ade una propiedad adicional deducciones (Double) a esta clase.
Sobrescribe el m√©todo calcularImpuesto(). La l√≥gica para un empleado es: (ingresoAnual - deducciones) * 0.15.

Paso 4: La Clase Autonomo que hereda e implementa
Crea una clase llamada Autonomo que herede de Persona e implemente la interfaz Contribuyente.
A√±ade una propiedad adicional gastos (Double) a esta clase.
Sobrescribe el m√©todo calcularImpuesto(). La l√≥gica para un aut√≥nomo es: (ingresoAnual - gastos) * 0.20.

Paso 5: La Clase GestorImpuestos
Crea una clase llamada GestorImpuestos.
Dentro de esta clase, crea un m√©todo procesarImpuestos(contribuyentes: List<Contribuyente>) que no devuelva nada.
Este m√©todo debe recorrer la lista de Contribuyente que recibe como par√°metro y, para cada uno:
Llamar al m√©todo calcularImpuesto().
Imprimir un mensaje que muestre el nombre del contribuyente y el impuesto que debe pagar.

Paso 6: La ejecuci√≥n en main
En la funci√≥n main, crea instancias de Empleado y Autonomo.
Mete a estos objetos en una lista de tipo List<Contribuyente>.
Crea una instancia de GestorImpuestos.
Llama al m√©todo procesarImpuestos() pas√°ndole la lista.