El Ejercicio: El Sistema de Puntos de Fidelidad de un Cine üé¨üçø

Imagina que est√°s desarrollando la l√≥gica para calcular los puntos de fidelidad
que ganan los clientes de un cine. La cantidad de puntos ganados depende del tipo
de entrada (Standard, Premium) y si se incluye una compra en la cafeter√≠a.

Paso 1: El data class Transaccion
Crea una data class llamada Transaccion.
Debe tener las siguientes propiedades, todas inmutables:
clienteId (Int)
tipoEntrada (String, e.g., "Standard", "Premium")
costoTicket (Double)
gastoCafeteria (Double)

Paso 2: La Interfaz ReglaPuntos (Estrategia)
Crea una interfaz llamada ReglaPuntos.
Esta interfaz debe declarar un
√∫nico m√©todo: calcularPuntos(transaccion: Transaccion) que devuelva un Int.

Paso 3: Las Clases de Estrategia
Crea dos clases que implementen la interfaz ReglaPuntos para simular diferentes l√≥gicas de negocio:
ReglaBase:
Implementa calcularPuntos. La regla es simple: 1 punto por cada $5 gastados en el costoTicket.
Los puntos deben ser n√∫meros enteros.
ReglaPromocion:
Implementa calcularPuntos. La regla es m√°s compleja: Suma los puntos de la ReglaBase,
y a√±ade 20 puntos extra si el gastoCafeteria es mayor que $10.

Paso 4: El GestorPuntos (Singleton con Lambdas)
Crea un objeto singleton llamado GestorPuntos.
Dentro, crea una lista mutable (MutableList) que almacene objetos de tipo Transaccion.
Crea un m√©todo registrarTransaccion(transaccion: Transaccion) para agregar transacciones.
Crea un m√©todo obtenerRankingPorCliente(regla: ReglaPuntos) que reciba una de las clases
de estrategia (ReglaPuntos) y devuelva un Map<Int, Int> (Map de clienteId a Puntos Totales).
Este m√©todo debe usar los siguientes flujos de Kotlin en una sola cadena de operaciones:
map: Convertir la lista de Transaccion a una lista de puntos usando el m√©todo calcularPuntos de la regla recibida.
groupBy: Agrupar las transacciones por clienteId.
mapValues: Sumar los puntos obtenidos por cada cliente.

Paso 5: La Ejecuci√≥n en main
En la funci√≥n main, crea varias instancias de Transaccion con datos variados
(diferentes clientes, diferentes gastos).
Registra estas transacciones en el GestorPuntos.
Llama al m√©todo obtenerRankingPorCliente() dos veces, una vez con la ReglaBase
y otra con la ReglaPromocion, e imprime los dos rankings.